import 'byte.grm' as bytelib;
sigma_star = bytelib.kBytes*;

anyword = bytelib.kNotSpace+;

insspace = "" : " ";
zero  = "0" : "zero";
delzero = "0" : "";

del_e2 = "\<E2\>" : "";
del_e3 = "\<E3\>" : "";
del_e6 = "\<E6\>" : "";
del_e9 = "\<E9\>" : "";
del_e12 = "\<E12\>" : "";
del_e15 = "\<E15\>" : "";
del_e18 = "\<E18\>" : "";



#####################################################################


card_units =   ("1" : "uno")
	| ("2" : "due")
	| ("3" : "tre")
	| ("4" : "quattro")
	| ("5" : "cinque")
	| ("6" : "sei")
	| ("7" : "sette")
	| ("8" : "otto")
	| ("9" : "nove")
;

card_teens =   ("1\<E1\>" : "dieci")
	| ("1\<E1\>1" : "undici")
	| ("1\<E1\>2" : "dodici")
	| ("1\<E1\>3" : "tredici")
	| ("1\<E1\>4" : "quattordici")
	| ("1\<E1\>5" : "quindici")
	| ("1\<E1\>6" : "sedici")
	| ("1\<E1\>7" : "diciassette")
	| ("1\<E1\>8" : "diciotto")
	| ("1\<E1\>9" : "diciannove")
;

card_decades =   ("2\<E1\>" : "venti")
	  | ("3\<E1\>" : "trenta")
	  | ("4\<E1\>" : "quaranta")
	  | ("5\<E1\>" : "cinquanta")
	  | ("6\<E1\>" : "sessanta")
	  | ("7\<E1\>" : "settanta")
	  | ("8\<E1\>" : "ottanta")
	  | ("9\<E1\>" : "novanta")
;

card_numbers_20_to_99_A = card_decades | card_decades card_units ;

final_v_drop =  CDRewrite[("i" | "a") : "", "t", ("uno" | "otto"), sigma_star];
tre_rule = CDRewrite["tre" : "tr√©", "", (bytelib.kSpace | "[EOS]" | "."), 
sigma_star];

card_numbers_20_to_99 = Optimize[card_numbers_20_to_99_A @ final_v_drop @ 
tre_rule];

card_numbers_to_99 = Optimize[card_units | card_teens | card_numbers_20_to_99];


card_hundred_rule = card_units del_e2 ("" : "cento") ;
card_one_hundred = CDRewrite["unocento" : "cento", " " | "[BOS]", "", 
sigma_star];
card_hundreds = Optimize[card_hundred_rule @ card_one_hundred];


card_numbers_100_to_999 = 
Optimize[
  card_hundreds |
  card_hundreds card_numbers_to_99]
;

card_numbers_to_999 = Optimize[card_numbers_to_99 | card_numbers_100_to_999];

card_thousands_rule = card_numbers_to_999 del_e3 ("" : "mila");
card_one_thousand = CDRewrite["unomila" : "mille", " " | "[BOS]", "", 
sigma_star];
card_thousands = Optimize[card_thousands_rule @ card_one_thousand];

card_numbers_1000_to_999999 =
Optimize[
  card_thousands |
  card_thousands card_numbers_to_999]
;

card_numbers_to_999999 = Optimize[card_numbers_to_999 | 
card_numbers_1000_to_999999];

card_millions_rule = card_numbers_to_999 insspace del_e6 ("" : "milioni") ;
card_one_million = CDRewrite["uno milioni" : "un milione", " " | "[BOS]", "", 
sigma_star];
card_millions = Optimize[card_millions_rule  @ card_one_million];



card_numbers_1M_to_1B =
	Optimize[
	    card_millions |
	    card_millions insspace card_numbers_to_999999]
;

card_numbers_to_1B = Optimize[card_numbers_to_999999 | card_numbers_1M_to_1B];

card_miliard_rule = card_numbers_to_999 insspace del_e9 ("" : "miliardi") ;
card_one_miliard = CDRewrite["uno miliardi" : "un miliardo", " " | "[BOS]" , 
"", sigma_star];
card_miliard = Optimize[card_miliard_rule @ card_one_miliard];


card_numbers_1B_to_1T =
Optimize[
   card_miliard |
   card_miliard insspace card_numbers_to_1B]
;

card_numbers_to_1T = Optimize[card_numbers_to_1B | card_numbers_1B_to_1T];

card_bilione_rule = card_numbers_to_999 insspace del_e12 ("" : "bilioni") ;
card_one_bilione = CDRewrite["uno bilioni" : "un bilione", " " | "[BOS]" , "",
sigma_star];
card_bilione = Optimize[card_bilione_rule @ card_one_bilione];

card_numbers_1T_to_1Q =
Optimize[
   card_bilione |
   card_bilione insspace card_numbers_to_1T]
;
 
card_numbers_to_1Q = Optimize[card_numbers_to_1T | card_numbers_1T_to_1Q];

card_trilione_rule = card_numbers_to_999 insspace del_e15 ("" : "trilioni") ;
card_one_trilione = CDRewrite["uno trilioni" : "un trilione", " " | "[BOS]" , 
"", sigma_star];
card_trilione = Optimize[card_trilione_rule @ card_one_trilione];

card_numbers_1Q_to_1QT =
Optimize[
   card_trilione |
   card_trilione insspace card_numbers_to_1Q]
;

card_numbers_to_1QT= Optimize[card_numbers_to_1Q | card_numbers_1Q_to_1QT];

card_biliardo_rule = card_numbers_to_999 insspace del_e18 ("" : "biliardi") ;
card_one_biliardo = CDRewrite["uno biliardi" : "un biliardo", " " | "[BOS]" , 
"", sigma_star];
card_biliardo = Optimize[card_biliardo_rule @ card_one_biliardo];

card_numbers_1QT_to_1S =
Optimize[
   card_biliardo |
   card_biliardo insspace card_numbers_to_1QT]
;

card_numbers_to_1S= Optimize[card_numbers_to_1QT | card_numbers_1QT_to_1S];




#####################################################################


CardUnitList = "uno" |"due" |"tre" |"quattro" |"cinque" |"sei" |"sette" 
|"otto" |"nove";


OrdinalUnits =  ("1" : "primo")
	| ("2" : "secondo")
	| ("3" : "terzo") 
	| ("4" : "quarto") 
	| ("5" : "quinto")
	| ("6" : "sesto") 
	| ("7" : "settimo") 
	| ("8" : "ottavo") 
	| ("9" : "nono") 
;

OrdinalTeens =   ("1\<E1\>" : "decimo")
	| ("1\<E1\>1" : "undicesimo") 
	| ("1\<E1\>2" : "dodicesimo") 
	| ("1\<E1\>3" : "tredicesimo") 
	| ("1\<E1\>4" : "quattordicesimo") 
	| ("1\<E1\>5" : "quindicesimo") 
	| ("1\<E1\>6" : "sedicesimo") 
	| ("1\<E1\>7" : "diciassettesimo") 
	| ("1\<E1\>8" : "diciottesimo") 
	| ("1\<E1\>9" : "diciannovesimo") 
;


numbers_20_to_99_O_1 = card_decades;

numbers_20_to_99_O_2 = CDRewrite[("i" | "a"): "esimo", "", (bytelib.kSpace 
| "[EOS]"), sigma_star];

OrdinalDecades = Optimize[numbers_20_to_99_O_1 @ numbers_20_to_99_O_2];

numbers_20_to_99_A = card_decades card_units;

numbers_20_to_99_B = CDRewrite["" : "esimo", CardUnitList, (bytelib.kSpace 
| "[EOS]"), sigma_star];


pre_ordinal_v_drop =  CDRewrite[bytelib.kNotSpace : "", "", "esimo", 
sigma_star];

OrdTre_rule = CDRewrite["tr" : "tre", "", "esimo", sigma_star];

quattr_rule = CDRewrite["tree" : "tre", "quat", "simo", sigma_star];

sei_rule = CDRewrite["e" : "ei", "s", "esimo", sigma_star];

numbers_20_to_99_Y = Optimize[numbers_20_to_99_A 
					 @ numbers_20_to_99_B
					 @ final_v_drop
					 @ pre_ordinal_v_drop
					 @ OrdTre_rule
					 @ quattr_rule
					 @ sei_rule
					 ];


numbers_20_to_99 = Optimize[OrdinalDecades | numbers_20_to_99_Y];

numbers_to_99 = Optimize[OrdinalUnits | OrdinalTeens | numbers_20_to_99] ;

numbers10_to_99 = Optimize[ OrdinalTeens | numbers_20_to_99] ;

hundred_rule = card_units del_e2 ("" : "cento") ;
one_hundred = CDRewrite["unocento" : "cento", " " | "[BOS]", "", sigma_star];
hundreds = Optimize[hundred_rule @ one_hundred];


OrdinalHundred_rule = card_units del_e2 ("" : "centesimo") ;
Ordinalone_hundred = CDRewrite["unocentesimo" : "centesimo", " " | "[BOS]", 
"", sigma_star];
OrdinalHundreds = Optimize[OrdinalHundred_rule @ Ordinalone_hundred];


OrdinalHundred_Units_1 = hundreds card_units;

OrdinalHundred_Units_2 = CDRewrite["" : "esimo", CardUnitList, (bytelib.kSpace 
| "[EOS]"), sigma_star];


OrdinalHundred_Units = Optimize[OrdinalHundred_Units_1
						@ OrdinalHundred_Units_2
						@ pre_ordinal_v_drop
						@ OrdTre_rule
						@ quattr_rule
						@ sei_rule						
						];
						


numbers_100_to_999 = 
Optimize[
  OrdinalHundreds |
  OrdinalHundred_Units |
  hundreds  numbers10_to_99]
;

numbers_to_999 = Optimize[numbers_to_99 | numbers_100_to_999];

numbers10_to_999 = Optimize[numbers10_to_99 | numbers_100_to_999];


##################

OrdinalThousands_rule = card_numbers_to_999 del_e3 ("" : "millesimo");
OrdinalOne_thousand = CDRewrite["unomillesimo" : "millesimo", "", "", 
sigma_star];
OrdinalThousands = Optimize[OrdinalThousands_rule @ OrdinalOne_thousand];

OrdinalThousands_Units_1 = card_thousands card_units;

OrdinalThousands_Units_2 = CDRewrite["" : "esimo", CardUnitList, 
(bytelib.kSpace | "[EOS]"), sigma_star];

OrdinalThousands_Units = Optimize[
						OrdinalThousands_Units_1
						@ OrdinalThousands_Units_2
						@ pre_ordinal_v_drop
						@ OrdTre_rule
						@ quattr_rule
						@ sei_rule						
						];


numbers_1000_to_999999 =
Optimize[
	OrdinalThousands
	| OrdinalThousands_Units
	| card_thousands numbers10_to_999
];

numbers_to_999999 = Optimize[numbers_to_999 | numbers_1000_to_999999];
numbers10_to_999999 = Optimize[numbers10_to_999 | numbers_1000_to_999999];


##################

ord_millions_rule = card_numbers_to_999 insspace del_e6 ("" : "milionesimo") ;
ord_one_million = CDRewrite["uno milionesimo" : "milionesimo", " " | "[BOS]", 
"", sigma_star];

ord_millions = Optimize[ord_millions_rule  @ ord_one_million];

one_millions_rule = CDRewrite["un milione" : "milione", " " | "[BOS]", "", 
sigma_star];

card_millions_norm = Optimize[card_millions @ one_millions_rule];


ord_numbers_1M_to_1B =
Optimize[
	ord_millions
	| card_millions_norm insspace numbers_to_999999
];

numbers_to_1B = Optimize[numbers_to_999999 | ord_numbers_1M_to_1B];

#numbers10_to_1B =  Optimize[numbers10_to_999999 | ord_numbers_1M_to_1B];



##################


##################


ord_miliard_rule = card_numbers_to_999 insspace del_e9 ("" : "miliardesimo") ;
ord_one_miliard = CDRewrite["uno miliardesimo" : "miliardesimo", " " 
| "[BOS]" , "", sigma_star];
ord_miliard = Optimize[ord_miliard_rule @ ord_one_miliard];


one_miliard_rule = CDRewrite["un miliardo" : "miliardo", " " | "[BOS]", "", 
sigma_star];

card_miliard_norm = Optimize[card_miliard @ one_miliard_rule];

ord_numbers_1B_to_1T =
Optimize[
   ord_miliard |
   card_miliard_norm insspace numbers_to_1B]
;

ord_numbers_to_1T = Optimize[numbers_to_1B | ord_numbers_1B_to_1T];


##################

ord_bilione_rule = card_numbers_to_999 insspace del_e12 ("" : "bilionesimo") ;
ord_one_bilione = CDRewrite["uno bilionesimo" : "bilionesimo", " " | "[BOS]" , 
"", sigma_star];
ord_bilione = Optimize[ord_bilione_rule @ ord_one_bilione];

one_bilione_rule = CDRewrite["un bilione" : "bilione", " " | "[BOS]", "", 
sigma_star];

card_bilione_norm = Optimize[card_bilione @ one_bilione_rule];
ord_numbers_1T_to_1Q =
Optimize[
   ord_bilione |
   card_bilione_norm insspace ord_numbers_to_1T]
;

ord_numbers_to_1Q = Optimize[ord_numbers_to_1T | ord_numbers_1T_to_1Q];

##################

ord_trilione_rule = card_numbers_to_999 insspace del_e15 ("" : "trilionesimo");
ord_one_trilione = CDRewrite["uno trilionesimo" : "trilionesimo", " " 
| "[BOS]" , "", sigma_star];
ord_trilione = Optimize[ord_trilione_rule @ ord_one_trilione];

one_trilione_rule = CDRewrite["un trilione" : "trilione", " " | "[BOS]", "", 
sigma_star];

card_trilione_norm = Optimize[card_trilione @ one_trilione_rule];

ord_numbers_1Q_to_1QT =
Optimize[
   ord_trilione |
   card_trilione_norm insspace ord_numbers_to_1Q]
;

ord_numbers_to_1QT = Optimize[ord_numbers_to_1Q | ord_numbers_1Q_to_1QT];


##################


ord_biliardo_rule = card_numbers_to_999 insspace del_e18 ("" : "biliardesimo");
ord_one_biliardo = CDRewrite["uno biliardesimo" : "biliardesimo", " " 
| "[BOS]" , "", sigma_star];
ord_biliardo = Optimize[ord_biliardo_rule @ ord_one_biliardo];

one_biliardo_rule = CDRewrite["un biliardo" : "biliardo", " " | "[BOS]", "", 
sigma_star];

card_biliardo_norm = Optimize[card_biliardo @ one_biliardo_rule];




ord_numbers_1QT_to_1S =
Optimize[
   ord_biliardo |
   card_biliardo_norm insspace ord_numbers_to_1QT]
;

ord_numbers_to_1S = Optimize[ord_numbers_to_1QT | ord_numbers_1QT_to_1S];




##################

export ORDINALNUMBERS = Optimize[ord_numbers_to_1S];